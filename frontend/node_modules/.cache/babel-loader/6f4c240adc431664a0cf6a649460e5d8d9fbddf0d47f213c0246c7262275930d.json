{"ast":null,"code":"import api from './api';\n\n// 获取所有序列\nexport const getSequences = async (filters = {}) => {\n  try {\n    const response = await api.get('/sequences', {\n      params: filters\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching sequences:', error);\n    throw error;\n  }\n};\n\n// 获取单个序列详情\nexport const getSequence = async sequenceId => {\n  try {\n    const response = await api.get(`/sequences/${sequenceId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching sequence ${sequenceId}:`, error);\n    throw error;\n  }\n};\n\n// 分析当前序列姿势\nexport const analyzeSequencePose = async (keypoints, sequenceId, poseIndex) => {\n  try {\n    const response = await api.post(`/sequences/${sequenceId}/analyze`, {\n      keypoints,\n      poseIndex\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error analyzing sequence pose:', error);\n    throw error;\n  }\n};\n\n// 完成序列训练\nexport const completeSequence = async (sequenceId, poseRecords) => {\n  try {\n    const response = await api.post(`/sequences/${sequenceId}/complete`, {\n      poseRecords\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error completing sequence:', error);\n    throw error;\n  }\n};\n\n// 创建新序列\nexport const createSequence = async sequenceData => {\n  try {\n    const response = await api.post('/sequences', sequenceData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating sequence:', error);\n    throw error;\n  }\n};\n\n// 更新序列\nexport const updateSequence = async (sequenceId, sequenceData) => {\n  try {\n    const response = await api.put(`/sequences/${sequenceId}`, sequenceData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating sequence ${sequenceId}:`, error);\n    throw error;\n  }\n};\n\n// 删除序列\nexport const deleteSequence = async sequenceId => {\n  try {\n    const response = await api.delete(`/sequences/${sequenceId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting sequence ${sequenceId}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getSequences","filters","response","get","params","data","error","console","getSequence","sequenceId","analyzeSequencePose","keypoints","poseIndex","post","completeSequence","poseRecords","createSequence","sequenceData","updateSequence","put","deleteSequence","delete"],"sources":["/Users/zhang/Desktop/smartyoga/frontend/src/services/sequenceService.js"],"sourcesContent":["import api from './api';\n\n// 获取所有序列\nexport const getSequences = async (filters = {}) => {\n  try {\n    const response = await api.get('/sequences', { params: filters });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching sequences:', error);\n    throw error;\n  }\n};\n\n// 获取单个序列详情\nexport const getSequence = async (sequenceId) => {\n  try {\n    const response = await api.get(`/sequences/${sequenceId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching sequence ${sequenceId}:`, error);\n    throw error;\n  }\n};\n\n// 分析当前序列姿势\nexport const analyzeSequencePose = async (keypoints, sequenceId, poseIndex) => {\n  try {\n    const response = await api.post(`/sequences/${sequenceId}/analyze`, {\n      keypoints,\n      poseIndex\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error analyzing sequence pose:', error);\n    throw error;\n  }\n};\n\n// 完成序列训练\nexport const completeSequence = async (sequenceId, poseRecords) => {\n  try {\n    const response = await api.post(`/sequences/${sequenceId}/complete`, {\n      poseRecords\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error completing sequence:', error);\n    throw error;\n  }\n};\n\n// 创建新序列\nexport const createSequence = async (sequenceData) => {\n  try {\n    const response = await api.post('/sequences', sequenceData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating sequence:', error);\n    throw error;\n  }\n};\n\n// 更新序列\nexport const updateSequence = async (sequenceId, sequenceData) => {\n  try {\n    const response = await api.put(`/sequences/${sequenceId}`, sequenceData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating sequence ${sequenceId}:`, error);\n    throw error;\n  }\n};\n\n// 删除序列\nexport const deleteSequence = async (sequenceId) => {\n  try {\n    const response = await api.delete(`/sequences/${sequenceId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting sequence ${sequenceId}:`, error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}